//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TextChat.Localizations {
    using System;
    
    
    /// <summary>
    ///   Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
    /// </summary>
    // Questa classe è stata generata automaticamente dalla classe StronglyTypedResourceBuilder.
    // tramite uno strumento quale ResGen o Visual Studio.
    // Per aggiungere o rimuovere un membro, modificare il file con estensione ResX ed eseguire nuovamente ResGen
    // con l'opzione /str oppure ricompilare il progetto VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Language {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Language() {
        }
        
        /// <summary>
        ///   Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TextChat.Localizations.Language", typeof(Language).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
        ///   ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Mute a player from the chat..
        /// </summary>
        internal static string AddMuteCommandDescription {
            get {
                return ResourceManager.GetString("AddMuteCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a &quot;{0}&quot; has been muted from the chat for {1} minute(s), reason: {2}.
        /// </summary>
        internal static string AddMuteCommandSuccessModerator {
            get {
                return ResourceManager.GetString("AddMuteCommandSuccessModerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You have been muted from the chat for {0} minute(s)! Reason: {1}.
        /// </summary>
        internal static string AddMuteCommandSuccessPlayer {
            get {
                return ResourceManager.GetString("AddMuteCommandSuccessPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a textchat mute add [Nickname/UserID/PlayerID] [Duration (Minutes)] [Reason].
        /// </summary>
        internal static string AddMuteCommandUsage {
            get {
                return ResourceManager.GetString("AddMuteCommandUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You cannot send messages to alive players!.
        /// </summary>
        internal static string CannotSendMessageToAlivePlayersError {
            get {
                return ResourceManager.GetString("CannotSendMessageToAlivePlayersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You cannot send a message to yourself!.
        /// </summary>
        internal static string CannotSendMessageToThemselvesError {
            get {
                return ResourceManager.GetString("CannotSendMessageToThemselvesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The message cannot be empty!.
        /// </summary>
        internal static string ChatMessageCannotBeEmptyError {
            get {
                return ResourceManager.GetString("ChatMessageCannotBeEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The message is too long! Maximum length: {0}.
        /// </summary>
        internal static string ChatMessageTooLongError {
            get {
                return ResourceManager.GetString("ChatMessageTooLongError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Welcome to the chat!.
        /// </summary>
        internal static string ChatWelcome {
            get {
                return ResourceManager.GetString("ChatWelcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a An error has occurred while executing the command!.
        /// </summary>
        internal static string CommandError {
            get {
                return ResourceManager.GetString("CommandError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a {0} command error: {1}.
        /// </summary>
        internal static string CommandException {
            get {
                return ResourceManager.GetString("CommandException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You&apos;re not allowed to run this command from the server console!.
        /// </summary>
        internal static string CommandNotAllowedForConsoleError {
            get {
                return ResourceManager.GetString("CommandNotAllowedForConsoleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You have to provide {0} parameter(s)! {1}.
        /// </summary>
        internal static string CommandNotEnoughParametersError {
            get {
                return ResourceManager.GetString("CommandNotEnoughParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You don&apos;t have enough permissions to run this command!.
        /// </summary>
        internal static string CommandNotEnoughPermissionsError {
            get {
                return ResourceManager.GetString("CommandNotEnoughPermissionsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Command &quot;{0}&quot; was not found!.
        /// </summary>
        internal static string CommandNotFoundError {
            get {
                return ResourceManager.GetString("CommandNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Please, specify a subcommand! Available: {0}.
        /// </summary>
        internal static string CommandSpecifySubCommand {
            get {
                return ResourceManager.GetString("CommandSpecifySubCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Too many arguments!.
        /// </summary>
        internal static string CommandTooManyArgumentsError {
            get {
                return ResourceManager.GetString("CommandTooManyArgumentsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The database has been closed successfully!.
        /// </summary>
        internal static string DatabaseClosed {
            get {
                return ResourceManager.GetString("DatabaseClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a An error has occurred while closing the database: {0}.
        /// </summary>
        internal static string DatabaseCloseError {
            get {
                return ResourceManager.GetString("DatabaseCloseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The database has been loaded successfully!.
        /// </summary>
        internal static string DatabaseLoaded {
            get {
                return ResourceManager.GetString("DatabaseLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a An error has occurred while opening the database: {0}.
        /// </summary>
        internal static string DatabaseLoadError {
            get {
                return ResourceManager.GetString("DatabaseLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Duration.
        /// </summary>
        internal static string Duration {
            get {
                return ResourceManager.GetString("Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Expire.
        /// </summary>
        internal static string Expire {
            get {
                return ResourceManager.GetString("Expire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a {0} is an invalid duration!.
        /// </summary>
        internal static string InvalidDurationError {
            get {
                return ResourceManager.GetString("InvalidDurationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Issuer.
        /// </summary>
        internal static string Issuer {
            get {
                return ResourceManager.GetString("Issuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a LIST OF COMMANDS ({0}).
        /// </summary>
        internal static string ListOfCommands {
            get {
                return ResourceManager.GetString("ListOfCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Minute(s).
        /// </summary>
        internal static string Minutes {
            get {
                return ResourceManager.GetString("Minutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a MUTES LIST.
        /// </summary>
        internal static string MutesList {
            get {
                return ResourceManager.GetString("MutesList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a There are no available players to chat with!.
        /// </summary>
        internal static string NoAvailablePlayersToChatWithError {
            get {
                return ResourceManager.GetString("NoAvailablePlayersToChatWithError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a There are no commands to show!.
        /// </summary>
        internal static string NoCommandsToShowError {
            get {
                return ResourceManager.GetString("NoCommandsToShowError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You&apos;re running an older version of EXILED ({0}), the plugin may not be compatible with it! Recommended version: {1}.
        /// </summary>
        internal static string OutdatedVersionError {
            get {
                return ResourceManager.GetString("OutdatedVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You have been muted from the chat for {0} minutes, reason: {1}.
        /// </summary>
        internal static string PlayerHasBeenChatMuted {
            get {
                return ResourceManager.GetString("PlayerHasBeenChatMuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a {0} has joined the chat!.
        /// </summary>
        internal static string PlayerHasJoinedTheChat {
            get {
                return ResourceManager.GetString("PlayerHasJoinedTheChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a {0} has left the chat!.
        /// </summary>
        internal static string PlayerHasLeftTheChat {
            get {
                return ResourceManager.GetString("PlayerHasLeftTheChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a &quot;{0}&quot; is already muted!.
        /// </summary>
        internal static string PlayerIsAlreadyMutedError {
            get {
                return ResourceManager.GetString("PlayerIsAlreadyMutedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You&apos;re sending messages too fast!.
        /// </summary>
        internal static string PlayerIsFloodingError {
            get {
                return ResourceManager.GetString("PlayerIsFloodingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You&apos;re muted from the chat room!.
        /// </summary>
        internal static string PlayerIsMutedError {
            get {
                return ResourceManager.GetString("PlayerIsMutedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a &quot;{0}&quot; is not muted!.
        /// </summary>
        internal static string PlayerIsNotMutedError {
            get {
                return ResourceManager.GetString("PlayerIsNotMutedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Player &quot;{0}&quot; was not found!.
        /// </summary>
        internal static string PlayerNotFoundError {
            get {
                return ResourceManager.GetString("PlayerNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You received a private message!.
        /// </summary>
        internal static string PlayerReceivedPrivateMessage {
            get {
                return ResourceManager.GetString("PlayerReceivedPrivateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a {0} has been Disabled!.
        /// </summary>
        internal static string PluginDisabled {
            get {
                return ResourceManager.GetString("PluginDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a {0} has been Enabled!.
        /// </summary>
        internal static string PluginEnabled {
            get {
                return ResourceManager.GetString("PluginEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a {0} has been Reloaded!.
        /// </summary>
        internal static string PluginReloaded {
            get {
                return ResourceManager.GetString("PluginReloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a PRIVATE.
        /// </summary>
        internal static string Private {
            get {
                return ResourceManager.GetString("Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Sends a private chat message to a player..
        /// </summary>
        internal static string PrivateChatDescription {
            get {
                return ResourceManager.GetString("PrivateChatDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a .chat private [Nickname/UserID/PlayerID] [Message].
        /// </summary>
        internal static string PrivateChatUsage {
            get {
                return ResourceManager.GetString("PrivateChatUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a PUBLIC.
        /// </summary>
        internal static string Public {
            get {
                return ResourceManager.GetString("Public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Sends a chat message to everyone in the server..
        /// </summary>
        internal static string PublicChatDescription {
            get {
                return ResourceManager.GetString("PublicChatDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a .chat public [Message].
        /// </summary>
        internal static string PublicChatUsage {
            get {
                return ResourceManager.GetString("PublicChatUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Reason.
        /// </summary>
        internal static string Reason {
            get {
                return ResourceManager.GetString("Reason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The reason cannot be empty!.
        /// </summary>
        internal static string ReasonCannotBeEmptyError {
            get {
                return ResourceManager.GetString("ReasonCannotBeEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a {0} mutes have been sucessfully deleted!.
        /// </summary>
        internal static string RemoveAllMutesSuccess {
            get {
                return ResourceManager.GetString("RemoveAllMutesSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Deletes all mutes in the database, or mutes of a specified player..
        /// </summary>
        internal static string RemoveMutesCommandDescription {
            get {
                return ResourceManager.GetString("RemoveMutesCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a textchat mute remove [Nickname/UserID/PlayerID].
        /// </summary>
        internal static string RemoveMutesCommandUsage {
            get {
                return ResourceManager.GetString("RemoveMutesCommandUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a {0} mutes of &quot;{1}&quot; have been sucessfully deleted!.
        /// </summary>
        internal static string RemoveMutesSuccess {
            get {
                return ResourceManager.GetString("RemoveMutesSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Shows all mutes in the database, or mutes of a specified player..
        /// </summary>
        internal static string ShowMutesCommandDescription {
            get {
                return ResourceManager.GetString("ShowMutesCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a textchat mute show [Nickname/UserID/PlayerID].
        /// </summary>
        internal static string ShowMutesCommandUsage {
            get {
                return ResourceManager.GetString("ShowMutesCommandUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a TEAM.
        /// </summary>
        internal static string Team {
            get {
                return ResourceManager.GetString("Team", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Sends a chat message to your team..
        /// </summary>
        internal static string TeamChatDescription {
            get {
                return ResourceManager.GetString("TeamChatDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a .chat team [Message].
        /// </summary>
        internal static string TeamChatUsage {
            get {
                return ResourceManager.GetString("TeamChatUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Timestamp.
        /// </summary>
        internal static string Timestamp {
            get {
                return ResourceManager.GetString("Timestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Unmute a player from the chat..
        /// </summary>
        internal static string UnmuteCommandDescription {
            get {
                return ResourceManager.GetString("UnmuteCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a &quot;{0}&quot; has been unmuted from the chat.
        /// </summary>
        internal static string UnmuteCommandSuccessModerator {
            get {
                return ResourceManager.GetString("UnmuteCommandSuccessModerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a You have been unmuted from the chat!.
        /// </summary>
        internal static string UnmuteCommandSuccessPlayer {
            get {
                return ResourceManager.GetString("UnmuteCommandSuccessPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a textchat mute remove [Nickname/UserID/PlayerID].
        /// </summary>
        internal static string UnmuteCommandUsage {
            get {
                return ResourceManager.GetString("UnmuteCommandUsage", resourceCulture);
            }
        }
    }
}
